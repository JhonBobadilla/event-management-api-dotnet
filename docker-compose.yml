version: '3.8'

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: event_management_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d event_management_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=event_management_db;Username=postgres;Password=postgres;Timeout=300;Pooling=true
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
    ports:
      - "5300:8080"
    volumes:
      - ./data-protection-keys:/app/keys
      - ./migrations:/app/migrations
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge